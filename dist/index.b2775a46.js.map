{"mappings":"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","sources":["<anon>","src/randomdata.js"],"sourcesContent":["/* const { uniqueId } = G6.Util; */ const enterprise_products = {\n    \"\\u7279\\u65AF\\u62C9\\uFF08Tesla\\uFF09\": [\n        \"Model S Plaid\",\n        \"Model X Long Range\",\n        \"Model 3 Standard Range Plus\",\n        \"Model Y Performance\",\n        \"Cybertruck Dual Motor\",\n        \"Roadster\"\n    ],\n    \"\\u534E\\u4E3A\\uFF08Huawei\\uFF09\": [\n        \"HI\\u5E73\\u53F0\",\n        \"5G-V2X\\u901A\\u4FE1\\u6A21\\u5757\",\n        \"\\u65E0\\u7EBF\\u7535\\u6CE2\\u96F7\\u8FBE\",\n        \"MDC 600\\u9AD8\\u6E05\\u6570\\u5B57\\u5316\\u6444\\u50CF\\u5934\"\n    ],\n    \"NIO\\uFF08\\u851A\\u6765\\u6C7D\\u8F66\\uFF09\": [\n        \"ES6 Sport\",\n        \"ES8 Premier\",\n        \"EC6 Performance\",\n        \"ET7 Performance\"\n    ],\n    \"BYD\\uFF08\\u6BD4\\u4E9A\\u8FEA\\uFF09\": [\n        \"\\u79E6Pro EV\\u8D85\\u957F\\u7EED\\u822A\",\n        \"\\u5510DM-i\\u56DB\\u9A71\\u8C6A\\u534E\",\n        \"\\u6C49EV\\u5168\\u80FD\\u65D7\\u8230\",\n        \"\\u5143EV535\",\n        \"\\u5B8BPro EV\",\n        \"T3\\u5FAE\\u578B\\u8D27\\u8F66\"\n    ],\n    \"\\u851A\\u666F\\u6C7D\\u8F66\\uFF08WM Motor\\uFF09\": [\n        \"EX5 Plus\",\n        \"EX6 Plus\",\n        \"W6\",\n        \"E5\"\n    ],\n    \"\\u5C0F\\u9E4F\\u6C7D\\u8F66\\uFF08XPeng\\uFF09\": [\n        \"P7 Wing\",\n        \"G3i 460\",\n        \"P5\",\n        \"P4\"\n    ],\n    \"\\u7406\\u60F3\\u6C7D\\u8F66\\uFF08Li Auto\\uFF09\": [\n        \"Li ONE\",\n        \"Li ONE Pro\",\n        \"Li ONE Elite\",\n        \"Li ONE Sapphire\",\n        \"Li Xiang One\"\n    ],\n    \"\\u957F\\u6C5F\\u6C7D\\u8F66\\uFF08CHJ Automotive\\uFF09\": [\n        \"\\u5C0F\\u8682\\u8681EV\",\n        \"\\u661F\\u9014\\u9510\\u7A0B\",\n        \"\\u661F\\u9014L7\",\n        \"\\u661F\\u9014TX\"\n    ],\n    \"\\u5E7F\\u6C7D\\u65B0\\u80FD\\u6E90\": [\n        \"Aion Y\",\n        \"Aion S\",\n        \"Aion LX\",\n        \"Aion V\"\n    ],\n    \"\\u5B81\\u5FB7\\u65F6\\u4EE3\\uFF08CATL\\uFF09\": [\n        \"EV\\u52A8\\u529B\\u7535\\u6C60\",\n        \"ESS\\u50A8\\u80FD\\u7535\\u6C60\",\n        \"EV\\u6A21\\u5757\\u5316\\u7535\\u6E90\\u7CFB\\u7EDF\"\n    ],\n    \"\\u6BD4\\u4E9A\\u8FEA\\uFF08BYD\\uFF09\": [\n        \"Han EV\",\n        \"Tang DM-i\",\n        \"Qin Plus\",\n        \"Song Pro DM\"\n    ],\n    \"\\u6C5F\\u6DEE\\u6C7D\\u8F66\": [\n        \"iEV7S\",\n        \"iEVA50\",\n        \"iEVS4\",\n        \"iEVS4R\"\n    ],\n    \"\\u5409\\u5229\\u6C7D\\u8F66\": [\n        \"\\u8FDC\\u666FX3 EV\",\n        \"\\u661F\\u8D8APHEV\",\n        \"\\u5E1D\\u8C6AEV\",\n        \"\\u7F24\\u745EEV\"\n    ],\n    \"\\u5317\\u6C7D\\u65B0\\u80FD\\u6E90\": [\n        \"EU5\",\n        \"EU7\",\n        \"EX3\",\n        \"EX5 Plus\"\n    ],\n    \"\\u534E\\u6668\\u5B9D\\u9A6C\": [\n        \"iX3\",\n        \"i4\",\n        \"iNEXT\",\n        \"i7\"\n    ],\n    \"\\u4E00\\u6C7D-\\u5927\\u4F17\": [\n        \"\\u5A01\\u9706EV\",\n        \"\\u51CC\\u6E21PHEV\",\n        \"\\u63A2\\u5CB3PHEV\",\n        \"\\u851A\\u63FDPHEV\"\n    ],\n    \"\\u957F\\u5B89\\u6C7D\\u8F66\": [\n        \"\\u6B27\\u5C1AA800 EV\",\n        \"\\u5954\\u5954EV\",\n        \"\\u9038\\u52A8EV\",\n        \"\\u777F\\u9A8BCC EV\"\n    ],\n    \"\\u4E1C\\u98CE\\u6C7D\\u8F66\": [\n        \"\\u98CE\\u884CT5 EV\",\n        \"\\u98CE\\u795EAX7 EV\",\n        \"\\u98CE\\u5149580 EV\",\n        \"\\u98CE\\u5149S560 EV\"\n    ],\n    \"\\u5947\\u745E\\u6C7D\\u8F66\": [\n        \"\\u745E\\u864E7 EV\",\n        \"\\u745E\\u864E5\"\n    ]\n};\nconst industry_technology = {\n    \"\\u6B63\\u6781\\u6750\\u6599\": {\n        Tech: [\n            \"\\u9502\\u77FF\",\n            \"\\u954D\\u77FF\",\n            \"\\u94B4\\u77FF\",\n            \"\\u9530\\u77FF\"\n        ],\n        belongsto: \"\\u539F\\u6750\\u6599\"\n    },\n    \"\\u8D1F\\u6781\\u6750\\u6599\": {\n        Tech: [\n            \"\\u77F3\\u58A8\"\n        ],\n        belongsto: \"\\u539F\\u6750\\u6599\"\n    },\n    \"\\u7535\\u89E3\\u6DB2\": {\n        Tech: [\n            \"\\u516D\\u6C1F\\u78F7\\u9178\\u9502\"\n        ],\n        belongsto: \"\\u539F\\u6750\\u6599\"\n    },\n    \"\\u9694\\u819C\": {\n        Tech: [\n            \"\\u805A\\u4E59\\u70EF\",\n            \"\\u805A\\u4E19\\u70EF\"\n        ],\n        belongsto: \"\\u539F\\u6750\\u6599\"\n    },\n    \"\\u7535\\u6C60\": {\n        Tech: [\n            \"PACK\",\n            \"\\u7535\\u82AF\"\n        ],\n        belongsto: \"\\u7EC4\\u4EF6\"\n    },\n    \"\\u7535\\u673A\": {\n        Tech: [\n            \"\\u6C38\\u78C1\\u6750\\u6599\",\n            \"\\u7845\\u94A2\\u7247\"\n        ],\n        belongsto: \"\\u7EC4\\u4EF6\"\n    },\n    \"\\u7535\\u63A7\": {\n        Tech: [\n            \"IGBT\\u82AF\\u7247\",\n            \"PCB\\u677F\"\n        ],\n        belongsto: \"\\u7EC4\\u4EF6\"\n    },\n    \"\\u8F66\\u8EAB\\u9644\\u4EF6\": {\n        Tech: [\n            \"\\u8F66\\u7A97\\u73BB\\u7483\",\n            \"\\u65B9\\u5411\\u76D8\",\n            \"\\u5EA7\\u6905\",\n            \"\\u540E\\u89C6\\u955C\",\n            \"\\u4EEA\\u8868\\u76D8\",\n            \"\\u8F66\\u706F\"\n        ],\n        belongsto: \"\\u7EC4\\u4EF6\"\n    },\n    \"\\u5E95\\u76D8\": {\n        Tech: [\n            \"\\u51CF\\u9707\\u5668\",\n            \"\\u8F66\\u8F6E\",\n            \"\\u5239\\u8F66\\u7247\",\n            \"\\u540E\\u89C6\\u955C\",\n            \"\\u4EEA\\u8868\\u76D8\",\n            \"\\u8F6C\\u52A8\\u8F74\",\n            \"\\u8F66\\u6865\"\n        ],\n        belongsto: \"\\u7EC4\\u4EF6\"\n    },\n    \"\\u6C7D\\u8F66\\u7535\\u5B50\": {\n        Tech: [\n            \"\\u7535\\u5B50\\u63A7\\u5236\\u7CFB\\u7EDF\",\n            \"\\u8F66\\u8F7D\\u7535\\u5B50\\u88C5\\u7F6E\"\n        ],\n        belongsto: \"\\u7EC4\\u4EF6\"\n    },\n    \"\\u4E58\\u7528\\u8F66\": {\n        Tech: [\n            \"\\u8F7F\\u8F66\",\n            \"SUV\"\n        ],\n        belongsto: \"\\u6574\\u8F66\"\n    },\n    \"\\u5546\\u7528\\u8F66\": {\n        Tech: [\n            \"\\u5BA2\\u8F66\",\n            \"\\u8D27\\u8F66\"\n        ],\n        belongsto: \"\\u6574\\u8F66\"\n    },\n    \"\\u5145\\u7535\\u670D\\u52A1\": {\n        Tech: [\n            \"\\u5145\\u7535\\u670D\\u52A1\",\n            \"\\u5145\\u7535\\u8BBE\\u65BD\",\n            \"\\u6362\\u7535\\u8BBE\\u5907\",\n            \"\\u7535\\u6C60\\u56DE\\u6536\"\n        ],\n        belongsto: \"\\u5E02\\u573A\\u670D\\u52A1\"\n    },\n    \"\\u540E\\u5E02\\u573A\\u670D\\u52A1\": {\n        Tech: [\n            \"\\u6C7D\\u8F66\\u91D1\\u878D\",\n            \"\\u6C7D\\u8F66\\u4FDD\\u9669\",\n            \"\\u6C7D\\u8F66\\u79DF\\u8D41\",\n            \"\\u4E8C\\u624B\\u8F66\\u4EA4\\u6613\",\n            \"\\u6C7D\\u8F66\\u62C6\\u89E3\\u56DE\\u6536\"\n        ],\n        belongsto: \"\\u5E02\\u573A\\u670D\\u52A1\"\n    }\n};\nconst enterprises = Object.keys(enterprise_products);\nconst products = Object.values(enterprise_products).flat();\nconst technology = Object.keys(industry_technology);\nconst Technology = Object.values(industry_technology);\nconst nodes = [];\nconst edges = [];\n/* \r\nfor (const industry in industry_technology) {\r\n    const TechArr = industry_technology[industry].Tech;\r\n    const stream = industry_technology[industry].belongsto;\r\n\r\n    nodes.push({\r\n        id: industry,\r\n        category: \"产业\",\r\n        belongsto: stream,\r\n\r\n    });\r\n\r\n    TechArr.forEach((Tech) => {\r\n        nodes.push({\r\n            id: Tech,\r\n            category: \"产业\",\r\n            belongsto: stream,\r\n\r\n        });\r\n    });\r\n    for (let Tech of TechArr) {\r\n        edges.push({\r\n            source: industry,\r\n            target: Tech,\r\n            label: \"子产业\"\r\n        });\r\n    }\r\n\r\n} \r\nconst data = { nodes, edges };\r\nconsole.log(JSON.stringify(data));*/ // Add nodes for each enterprise and product\nconst enterprise_nodes = [];\nconst product_nodes = [];\nfor(const enterprise in enterprise_products){\n    // Add enterprise node\n    enterprise_nodes.push({\n        id: enterprise,\n        category: \"\\u4F01\\u4E1A\",\n        belongsto: \"\\u6574\\u8F66\"\n    });\n    // Add product nodes and edges to the enterprise node\n    const products = enterprise_products[enterprise];\n    for (const product of products){\n        product_nodes.push({\n            id: product,\n            category: \"\\u4EA7\\u54C1\",\n            belongsto: \"\\u6574\\u8F66\"\n        });\n        edges.push({\n            source: enterprise,\n            target: product,\n            label: \"\\u4E3B\\u8981\\u4EA7\\u54C1\"\n        });\n    }\n}\n// Combine enterprise and product nodes\nconst cnodes = [\n    ...enterprise_nodes,\n    ...product_nodes\n];\n/* console.log(JSON.stringify(cnodes)) */ function generateRandomTechWord() {\n    const industries = [\n        \"\\u539F\\u6750\\u6599\",\n        \"\\u7EC4\\u4EF6\",\n        \"\\u6574\\u8F66\",\n        \"\\u5E02\\u573A\\u670D\\u52A1\"\n    ];\n    const techWords = [\n        \"\\u71C3\\u6599\\u7535\\u6C60\",\n        \"\\u7535\\u9A71\\u52A8\",\n        \"\\u667A\\u80FD\\u9A7E\\u9A76\",\n        \"\\u8F66\\u8054\\u7F51\",\n        \"\\u8F7B\\u91CF\\u5316\\u6750\\u6599\",\n        \"\\u5145\\u7535\\u8BBE\\u65BD\",\n        \"\\u65E0\\u4EBA\\u9A7E\\u9A76\",\n        \"\\u6C22\\u71C3\\u6599\",\n        \"\\u6DF7\\u5408\\u71C3\\u6599\",\n        \"\\u7EAF\\u7535\\u52A8\",\n        \"\\u8F66\\u8F7D\\u8BED\\u97F3\",\n        \"\\u5149\\u4F0F\\u5145\\u7535\",\n        \"\\u5FEB\\u901F\\u5145\\u7535\",\n        \"\\u65B0\\u80FD\\u6E90\\u53D1\\u52A8\\u673A\",\n        \"\\u8F66\\u5185\\u7A7A\\u6C14\\u51C0\\u5316\",\n        \"\\u7535\\u673A\\u8C03\\u63A7\",\n        \"\\u9A71\\u52A8\\u88C5\\u7F6E\",\n        \"\\u52A8\\u529B\\u603B\\u6210\",\n        \"\\u6D4B\\u8BD5\\u65B9\\u6CD5\",\n        \"\\u7BA1\\u7406\\u7CFB\\u7EDF\",\n        \"\\u5236\\u52A8\\u63A7\\u5236\",\n        \"\\u63A7\\u5236\",\n        \"\\u6DF7\\u5408\\u52A8\\u529B\",\n        \"\\u52A8\\u529B\\u7535\\u6C60\",\n        \"\\u673A\\u52A8\\u8F66\\u8F86\"\n    ];\n    const suffixs = [\n        \"\\u7CFB\\u7EDF\",\n        \"\\u88C5\\u7F6E\",\n        \"\\u65B9\\u6CD5\",\n        \"\\u5DE5\\u827A\",\n        \"\\u6C7D\\u8F66\",\n        \"\\u53D1\\u52A8\\u673A\",\n        \"\\u7535\\u673A\",\n        \"\\u7535\\u63A7\",\n        \"\\u7535\\u6C60\",\n        '',\n        ''\n    ];\n    const randomIndustry = industries[Math.floor(Math.random() * industries.length)];\n    const randomSuffix = suffixs[Math.floor(Math.random() * suffixs.length)];\n    const randomTechWord = techWords[Math.floor(Math.random() * techWords.length)] + randomSuffix;\n    return {\n        label: `${randomTechWord}`,\n        belongsto: `${randomIndustry}`\n    };\n}\nfunction generateCompanyName() {\n    const firstWords = [\n        \"\\u4E1C\\u65B9\",\n        \"\\u4E2D\\u534E\",\n        \"\\u65B0\\u534E\",\n        \"\\u5927\\u5730\",\n        \"\\u5929\\u4F7F\",\n        \"\\u5609\\u7F8E\",\n        \"\\u91D1\\u5229\",\n        \"\\u4FE1\\u8BDA\",\n        \"\\u5B89\\u76DB\",\n        \"\\u5174\\u53D1\"\n    ];\n    const secondWords = [\n        \"\\u79D1\\u6280\",\n        \"\\u4FE1\\u606F\",\n        \"\\u7F51\\u7EDC\",\n        \"\\u901A\\u4FE1\",\n        \"\\u8F6F\\u4EF6\",\n        \"\\u5B9E\\u4E1A\",\n        \"\\u521B\\u65B0\",\n        \"\\u79D1\\u5B66\",\n        \"\\u63A7\\u80A1\",\n        \"\\u6295\\u8D44\"\n    ];\n    const lastWords = [\n        \"\\u6709\\u9650\\u516C\\u53F8\",\n        \"\\u80A1\\u4EFD\\u6709\\u9650\\u516C\\u53F8\",\n        \"\\u96C6\\u56E2\\u6709\\u9650\\u516C\\u53F8\",\n        \"\\u79D1\\u6280\\u53D1\\u5C55\\u6709\\u9650\\u516C\\u53F8\",\n        \"\\u7F51\\u7EDC\\u79D1\\u6280\\u6709\\u9650\\u516C\\u53F8\",\n        \"\\u4FE1\\u606F\\u79D1\\u6280\\u6709\\u9650\\u516C\\u53F8\",\n        \"\\u901A\\u8BAF\\u79D1\\u6280\\u6709\\u9650\\u516C\\u53F8\",\n        \"\\u8F6F\\u4EF6\\u6709\\u9650\\u516C\\u53F8\",\n        \"\\u5B9E\\u4E1A\\u6709\\u9650\\u516C\\u53F8\",\n        \"\\u521B\\u65B0\\u6709\\u9650\\u516C\\u53F8\"\n    ];\n    const randomFirst = firstWords[Math.floor(Math.random() * firstWords.length)];\n    const randomSecond = secondWords[Math.floor(Math.random() * secondWords.length)];\n    const randomLast = lastWords[Math.floor(Math.random() * lastWords.length)];\n    return randomFirst + randomSecond + randomLast;\n}\nfunction generateRandomPatentName() {\n    const prefixOptions = [\n        \"\\u57FA\\u4E8E\",\n        \"\\u4F9D\\u6258\\u4E8E\",\n        \"\\u65B0\\u578B\\u7684\"\n    ];\n    const actionOptions = [\n        \"\\u5B9E\\u73B0\",\n        \"\\u4F7F\\u7528\",\n        \"\\u652F\\u6301\",\n        \"\\u4F18\\u5316\",\n        \"\\u6539\\u8FDB\"\n    ];\n    const targetOptions = [\n        \"\\u9759\\u6001\\u6570\\u636E\\u540C\\u6B65\",\n        \"3D\\u540C\\u6B65\\u4FE1\\u53F7\\u53D1\\u5C04\\u5668\",\n        \"\\u667A\\u80FD\\u5316\\u6C34\\u9F99\\u5934\\u7CFB\\u7EDF\",\n        \"\\u667A\\u80FD\\u5B89\\u5168\\u9501\",\n        \"\\u65E0\\u4EBA\\u673A\\u822A\\u62CD\\u7CFB\\u7EDF\"\n    ];\n    const nounOptions = [\n        \"\\u65B9\\u6CD5\",\n        \"\\u7CFB\\u7EDF\",\n        \"\\u88C5\\u7F6E\",\n        \"\\u8BBE\\u5907\",\n        \"\\u673A\\u5236\"\n    ];\n    const prefix = prefixOptions[Math.floor(Math.random() * prefixOptions.length)];\n    const action = actionOptions[Math.floor(Math.random() * actionOptions.length)];\n    const target = targetOptions[Math.floor(Math.random() * targetOptions.length)];\n    const noun = nounOptions[Math.floor(Math.random() * nounOptions.length)];\n    const patentName = `\\u{4E00}\\u{79CD}${prefix}${action}${target}\\u{7684}${noun}`;\n    return patentName;\n}\nfunction generateRandomProductName() {\n    const model = products[Math.floor(Math.random() * products.length)];\n    return model;\n}\nfunction generateRandomLabel(dataType) {\n    if (dataType == \"\\u4E13\\u5229\") return generateRandomPatentName();\n    if (dataType == \"\\u4F01\\u4E1A\") return generateCompanyName();\n    if (dataType == \"\\u6280\\u672F\") return generateRandomTechWord().label;\n    if (dataType == \"\\u4EA7\\u54C1\") return generateRandomProductName();\n}\nlet idCounter = 0; // 添加这一行\n/* function generateData(numNodes, sourceNode, dataType) {\r\n    const nodes = [];\r\n    const edges = [];\r\n\r\n      if (dataType != '技术') nodes.push({ id: sourceNode, label: generateRandomTechWord(), category: '技术' });\r\n\r\n    for (let i = 1; i <= numNodes; i++) {\r\n        let id;\r\n        switch (dataType) {\r\n            case '技术':\r\n                id = `t${idCounter++}`;\r\n                break;\r\n            case '专利':\r\n                id = `p${idCounter++}`;\r\n                break;\r\n            case '企业':\r\n                id = `e${idCounter++}`;\r\n                break;\r\n\r\n        }\r\n        const label = generateRandomLabel(dataType);\r\n        const category = dataType;\r\n        const source = sourceNode;\r\n        const target = id;\r\n       \r\n        nodes.push({ id, label, category  });\r\n      \r\n        edges.push({ source, target });\r\n    }\r\n\r\n    return {\r\n        nodes: nodes,\r\n        edges: edges\r\n    };\r\n} */ function generateData(numNodes, numEdges) {\n    let generatedData = null;\n    if (generatedData) return generatedData;\n    const nodes = [];\n    const edges = [];\n    for(let i = 0; i < numNodes; i++)nodes.push({\n        id: generateRandomTechWord().label,\n        /*   label: generateRandomTechWord().label, */ category: \"\\u6280\\u672F\",\n        belongsto: generateRandomTechWord().belongsto\n    });\n    const nodesByIndustry = {};\n    nodes.forEach((node)=>{\n        if (!nodesByIndustry[node.belongsto]) nodesByIndustry[node.belongsto] = [];\n        nodesByIndustry[node.belongsto].push(node.id);\n    });\n    const nodeIds = nodes.map((node)=>node.id);\n    for(let i = 0; i < numEdges; i++){\n        let source, target;\n        do {\n            source = nodeIds[Math.floor(Math.random() * numNodes)];\n            target = nodeIds[Math.floor(Math.random() * numNodes)];\n        }while (source === target || edges.some((edge)=>edge.source === source && edge.target === target || edge.source === target && edge.target === source));\n        edges.push({\n            source,\n            target\n        });\n    }\n    // 保存生成的节点数组和边数组\n    generatedData = {\n        nodes,\n        edges\n    };\n    // 返回生成的节点数组和边数组\n    return generatedData;\n}\nconst rdata = generateData(100, 200);\n\n//# sourceMappingURL=index.b2775a46.js.map\n","/* const { uniqueId } = G6.Util; */\r\nconst enterprise_products = {\r\n    \"特斯拉（Tesla）\": [\"Model S Plaid\", \"Model X Long Range\", \"Model 3 Standard Range Plus\", \"Model Y Performance\", \"Cybertruck Dual Motor\", \"Roadster\"],\r\n    \"华为（Huawei）\": [\"HI平台\", \"5G-V2X通信模块\", \"无线电波雷达\", \"MDC 600高清数字化摄像头\"],\r\n    \"NIO（蔚来汽车）\": [\"ES6 Sport\", \"ES8 Premier\", \"EC6 Performance\", \"ET7 Performance\"],\r\n    \"BYD（比亚迪）\": [\"秦Pro EV超长续航\", \"唐DM-i四驱豪华\", \"汉EV全能旗舰\", \"元EV535\", \"宋Pro EV\", \"T3微型货车\"],\r\n    \"蔚景汽车（WM Motor）\": [\"EX5 Plus\", \"EX6 Plus\", \"W6\", \"E5\"],\r\n    \"小鹏汽车（XPeng）\": [\"P7 Wing\", \"G3i 460\", \"P5\", \"P4\"],\r\n    \"理想汽车（Li Auto）\": [\"Li ONE\", \"Li ONE Pro\", \"Li ONE Elite\", \"Li ONE Sapphire\", \"Li Xiang One\"],\r\n    \"长江汽车（CHJ Automotive）\": [\"小蚂蚁EV\", \"星途锐程\", \"星途L7\", \"星途TX\"],\r\n    \"广汽新能源\": [\"Aion Y\", \"Aion S\", \"Aion LX\", \"Aion V\"],\r\n    \"宁德时代（CATL）\": [\"EV动力电池\", \"ESS储能电池\", \"EV模块化电源系统\"],\r\n    \"比亚迪（BYD）\": [\"Han EV\", \"Tang DM-i\", \"Qin Plus\", \"Song Pro DM\"],\r\n    \"江淮汽车\": [\"iEV7S\", \"iEVA50\", \"iEVS4\", \"iEVS4R\"],\r\n    \"吉利汽车\": [\"远景X3 EV\", \"星越PHEV\", \"帝豪EV\", \"缤瑞EV\"],\r\n    \"北汽新能源\": [\"EU5\", \"EU7\", \"EX3\", \"EX5 Plus\"],\r\n    \"华晨宝马\": [\"iX3\", \"i4\", \"iNEXT\", \"i7\"],\r\n    \"一汽-大众\": [\"威霆EV\", \"凌渡PHEV\", \"探岳PHEV\", \"蔚揽PHEV\"],\r\n    \"长安汽车\": [\"欧尚A800 EV\", \"奔奔EV\", \"逸动EV\", \"睿骋CC EV\"],\r\n    \"东风汽车\": [\"风行T5 EV\", \"风神AX7 EV\", \"风光580 EV\", \"风光S560 EV\"],\r\n    \"奇瑞汽车\": [\"瑞虎7 EV\", \"瑞虎5\"]\r\n\r\n};\r\nconst industry_technology = {\r\n    \"正极材料\": {\r\n        Tech: [\"锂矿\", \"镍矿\", \"钴矿\", \"锰矿\"],\r\n        belongsto: \"原材料\"\r\n    },\r\n    \"负极材料\": {\r\n        Tech: [\"石墨\"],\r\n        belongsto: \"原材料\"\r\n    },\r\n    \"电解液\": {\r\n        Tech: [\"六氟磷酸锂\"],\r\n        belongsto: \"原材料\"\r\n    },\r\n    \"隔膜\": {\r\n        Tech: [\"聚乙烯\", \"聚丙烯\"],\r\n        belongsto: \"原材料\"\r\n    },\r\n    \"电池\": {\r\n        Tech: [\"PACK\", \"电芯\"],\r\n        belongsto: \"组件\"\r\n    },\r\n    \"电机\": {\r\n        Tech: [\"永磁材料\", \"硅钢片\"],\r\n        belongsto: \"组件\"\r\n    },\r\n    \"电控\": {\r\n        Tech: [\"IGBT芯片\", \"PCB板\"],\r\n        belongsto: \"组件\"\r\n    },\r\n    \"车身附件\": {\r\n        Tech: [\"车窗玻璃\", \"方向盘\", \"座椅\", \"后视镜\", \"仪表盘\", '车灯'],\r\n        belongsto: \"组件\"\r\n    },\r\n    \"底盘\": {\r\n        Tech: [\"减震器\", \"车轮\", \"刹车片\", \"后视镜\", \"仪表盘\", \"转动轴\", \"车桥\"],\r\n        belongsto: \"组件\"\r\n    },\r\n    \"汽车电子\": {\r\n        Tech: [\"电子控制系统\", \"车载电子装置\"],\r\n        belongsto: \"组件\"\r\n    },\r\n    \"乘用车\": {\r\n        Tech: [\"轿车\", \"SUV\"],\r\n        belongsto: \"整车\"\r\n    },\r\n    \"商用车\": {\r\n        Tech: [\"客车\", \"货车\"],\r\n        belongsto: \"整车\"\r\n    },\r\n    \"充电服务\": {\r\n        Tech: ['充电服务', '充电设施', '换电设备', '电池回收'],\r\n        belongsto: \"市场服务\"\r\n    },\r\n    \"后市场服务\": {\r\n        Tech: [\"汽车金融\", \"汽车保险\", \"汽车租赁\", \"二手车交易\", \"汽车拆解回收\"],\r\n        belongsto: \"市场服务\"\r\n    }\r\n};\r\nconst enterprises = Object.keys(enterprise_products);\r\nconst products = Object.values(enterprise_products).flat();\r\n\r\nconst technology = Object.keys(industry_technology);\r\n\r\nconst Technology = Object.values(industry_technology);\r\n\r\nconst nodes = [];\r\nconst edges = [];\r\n\r\n/* \r\nfor (const industry in industry_technology) {\r\n    const TechArr = industry_technology[industry].Tech;\r\n    const stream = industry_technology[industry].belongsto;\r\n\r\n    nodes.push({\r\n        id: industry,\r\n        category: \"产业\",\r\n        belongsto: stream,\r\n\r\n    });\r\n\r\n    TechArr.forEach((Tech) => {\r\n        nodes.push({\r\n            id: Tech,\r\n            category: \"产业\",\r\n            belongsto: stream,\r\n\r\n        });\r\n    });\r\n    for (let Tech of TechArr) {\r\n        edges.push({\r\n            source: industry,\r\n            target: Tech,\r\n            label: \"子产业\"\r\n        });\r\n    }\r\n\r\n} \r\nconst data = { nodes, edges };\r\nconsole.log(JSON.stringify(data));*/\r\n// Add nodes for each enterprise and product\r\nconst enterprise_nodes = [];\r\nconst product_nodes = [];\r\n\r\nfor (const enterprise in enterprise_products) {\r\n    // Add enterprise node\r\n    enterprise_nodes.push({ id: enterprise, category: \"企业\", belongsto: \"整车\", });\r\n\r\n    // Add product nodes and edges to the enterprise node\r\n    const products = enterprise_products[enterprise];\r\n    for (const product of products) {\r\n        product_nodes.push({ id: product, category: \"产品\", belongsto: \"整车\", });\r\n        edges.push({ source: enterprise, target: product, label: \"主要产品\" });\r\n    }\r\n}\r\n\r\n// Combine enterprise and product nodes\r\nconst cnodes = [...enterprise_nodes, ...product_nodes];\r\n/* console.log(JSON.stringify(cnodes)) */\r\n\r\n\r\nfunction generateRandomTechWord() {\r\n\r\n    const industries = ['原材料', '组件', '整车', '市场服务'];\r\n\r\n    const techWords = [\r\n        '燃料电池', '电驱动', '智能驾驶', '车联网', '轻量化材料', '充电设施', '无人驾驶', '氢燃料', '混合燃料', '纯电动', '车载语音', '光伏充电', '快速充电', '新能源发动机', '车内空气净化', '电机调控', \"驱动装置\", \"动力总成\", \"测试方法\", \"管理系统\", \"制动控制\", \"控制\", \"混合动力\", \"动力电池\", \"机动车辆\"\r\n    ];\r\n    const suffixs = ['系统', '装置', '方法', '工艺', '汽车', '发动机', '电机', '电控', '电池', '', '']\r\n\r\n    const randomIndustry = industries[Math.floor(Math.random() * industries.length)];\r\n    const randomSuffix = suffixs[Math.floor(Math.random() * suffixs.length)]\r\n    const randomTechWord = techWords[Math.floor(Math.random() * techWords.length)] + randomSuffix;\r\n\r\n    return {\r\n        label: `${randomTechWord}`,\r\n        belongsto: `${randomIndustry}`,\r\n\r\n    };\r\n}\r\n\r\n\r\nfunction generateCompanyName() {\r\n    const firstWords = ['东方', '中华', '新华', '大地', '天使', '嘉美', '金利', '信诚', '安盛', '兴发'];\r\n    const secondWords = ['科技', '信息', '网络', '通信', '软件', '实业', '创新', '科学', '控股', '投资'];\r\n    const lastWords = ['有限公司', '股份有限公司', '集团有限公司', '科技发展有限公司', '网络科技有限公司', '信息科技有限公司', '通讯科技有限公司', '软件有限公司', '实业有限公司', '创新有限公司'];\r\n\r\n    const randomFirst = firstWords[Math.floor(Math.random() * firstWords.length)];\r\n    const randomSecond = secondWords[Math.floor(Math.random() * secondWords.length)];\r\n    const randomLast = lastWords[Math.floor(Math.random() * lastWords.length)];\r\n\r\n    return randomFirst + randomSecond + randomLast;\r\n}\r\n\r\nfunction generateRandomPatentName() {\r\n    const prefixOptions = ['基于', '依托于', '新型的'];\r\n    const actionOptions = ['实现', '使用', '支持', '优化', '改进'];\r\n    const targetOptions = ['静态数据同步', '3D同步信号发射器', '智能化水龙头系统', '智能安全锁', '无人机航拍系统'];\r\n    const nounOptions = ['方法', '系统', '装置', '设备', '机制'];\r\n\r\n\r\n    const prefix = prefixOptions[Math.floor(Math.random() * prefixOptions.length)];\r\n    const action = actionOptions[Math.floor(Math.random() * actionOptions.length)];\r\n    const target = targetOptions[Math.floor(Math.random() * targetOptions.length)];\r\n    const noun = nounOptions[Math.floor(Math.random() * nounOptions.length)];\r\n\r\n\r\n    const patentName = `一种${prefix}${action}${target}的${noun}`;\r\n    return patentName;\r\n}\r\n\r\nfunction generateRandomProductName() {\r\n\r\n    const model = products[Math.floor(Math.random() * products.length)];\r\n    return model;\r\n}\r\n\r\nfunction generateRandomLabel(dataType) {\r\n    if (dataType == '专利') return generateRandomPatentName();\r\n    if (dataType == '企业') return generateCompanyName();\r\n    if (dataType == '技术') return generateRandomTechWord().label;\r\n    if (dataType == '产品') return generateRandomProductName();\r\n\r\n}\r\nlet idCounter = 0; // 添加这一行\r\n/* function generateData(numNodes, sourceNode, dataType) {\r\n    const nodes = [];\r\n    const edges = [];\r\n\r\n      if (dataType != '技术') nodes.push({ id: sourceNode, label: generateRandomTechWord(), category: '技术' });\r\n\r\n    for (let i = 1; i <= numNodes; i++) {\r\n        let id;\r\n        switch (dataType) {\r\n            case '技术':\r\n                id = `t${idCounter++}`;\r\n                break;\r\n            case '专利':\r\n                id = `p${idCounter++}`;\r\n                break;\r\n            case '企业':\r\n                id = `e${idCounter++}`;\r\n                break;\r\n\r\n        }\r\n        const label = generateRandomLabel(dataType);\r\n        const category = dataType;\r\n        const source = sourceNode;\r\n        const target = id;\r\n       \r\n        nodes.push({ id, label, category  });\r\n      \r\n        edges.push({ source, target });\r\n    }\r\n\r\n    return {\r\n        nodes: nodes,\r\n        edges: edges\r\n    };\r\n} */\r\n\r\nfunction generateData(numNodes, numEdges) {\r\n    let generatedData = null;\r\n    if (generatedData) {\r\n        return generatedData;\r\n    }\r\n    const nodes = [];\r\n    const edges = [];\r\n    for (let i = 0; i < numNodes; i++) {\r\n        nodes.push({\r\n            id: generateRandomTechWord().label,\r\n            /*   label: generateRandomTechWord().label, */\r\n            category: '技术',\r\n            belongsto: generateRandomTechWord().belongsto\r\n        });\r\n    }\r\n\r\n    const nodesByIndustry = {};\r\n    nodes.forEach((node) => {\r\n        if (!nodesByIndustry[node.belongsto]) {\r\n            nodesByIndustry[node.belongsto] = [];\r\n        }\r\n        nodesByIndustry[node.belongsto].push(node.id);\r\n    });\r\n\r\n    const nodeIds = nodes.map((node) => node.id);\r\n\r\n    for (let i = 0; i < numEdges; i++) {\r\n        let source, target;\r\n        do {\r\n            source = nodeIds[Math.floor(Math.random() * numNodes)];\r\n            target = nodeIds[Math.floor(Math.random() * numNodes)];\r\n        } while (source === target || edges.some((edge) => (edge.source === source && edge.target === target) || (edge.source === target && edge.target === source)));\r\n\r\n        edges.push({\r\n            source,\r\n            target,\r\n        });\r\n    }\r\n\r\n    // 保存生成的节点数组和边数组\r\n    generatedData = { nodes, edges };\r\n\r\n    // 返回生成的节点数组和边数组\r\n    return generatedData;\r\n}\r\n\r\n\r\nconst rdata = generateData(100, 200);"],"names":["enterprise_products","industry_technology","Tech","belongsto","Object","keys","values","flat","edges","enterprise_nodes","product_nodes","enterprise","product","push","id","category","source","target","label","generateRandomTechWord","industries","techWords","suffixs","randomIndustry","Math","floor","random","length","randomTechWord","generateData","numNodes","numEdges","generatedData","nodes","i","nodesByIndustry","forEach","node","nodeIds","map","some","edge"],"version":3,"file":"index.b2775a46.js.map"}